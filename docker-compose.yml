version: '3'
services:
  db:
    image: yobasystems/alpine-mariadb:10.6
    container_name: db-${PROJECT_NAME}
    restart: always
    command: --skip-host-cache --bind=0.0.0.0 --default_authentication_plugin=mysql_native_password
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - ./docker/mariadb/data:/var/lib/mysql
      - ./docker/mariadb/conf/mariadb-server.cnf:/etc/my.cnf.d/mariadb-server.cnf
    #  - ./docker/mariadb/dump.sql:/docker-entrypoint-initdb.d/dump.sql not work
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_general_ci
    networks:
      - stack
    logging:
      options:
        max-size: 10m


    # tag: backend-php8.0-xdebug1
  backend:
    container_name: backend-${PROJECT_NAME}
    image: europe-central2-docker.pkg.dev/artifact-repos/docker/backend-php8.0
#    build:
#        context: .
#        dockerfile: docker/Dockerfile
##        dockerfile: docker/Dockerfile-Scratch-${PHP_MINOR_VERSION}
#        args:
#            - XDEBUG=true
#            - PHP_VERSION=${PHP_MINOR_VERSION}
    environment:
        PHP_IDE_CONFIG: "serverName=Docker"
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    stdin_open: true
    tty: true
    working_dir: /backend
    volumes:
        - ./:/backend
        - ./docker/nginx/${NGINX_CONFIG}.conf:/etc/nginx/conf.d/backend.conf
        - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
        - ./docker/php/fpm-pool.conf:/etc/php${PHP_VERSION}/php-fpm.d/www.conf
        - ./docker/logs:/home/logs
        - ./docker/php/php.ini:/etc/php${PHP_VERSION}/php.ini
        - ./docker/supervisor/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
        - ./docker/cron/crontab:/etc/crotabs/crontab
        - ./docker/run.sh:/home/run.sh
        - ./docker/certbot/conf/:/etc/letsencrypt
    restart: unless-stopped
    ports:
        - ${APP_PORT}:80/tcp
        - ${APP_SSL_PORT}:443/tcp
        - ${APP_PORT}:80/udp
        - ${APP_SSL_PORT}:443/udp
        - ${SSH_PORT}:22
        - ${WS_PORT}:6001
        - ${WSS_PORT}:8443
    networks:
      - stack
    logging:
        options:
            max-size: 10m

#  certbot:
#    image: certbot/dns-cloudflare:latest
#    container_name: certbot
#    volumes:
#      - ./docker/certbot/conf/:/etc/letsencrypt
#      - ./docker/certbot/www/:/var/www/certbot
#      - ./docker/certbot/cloudflare.ini:/root/cloudflare.ini
#      - ./docker/certbot/log/letsencrypt:/var/log/letsencrypt
#    command: >-
#      certonly --dns-cloudflare
#      --dns-cloudflare-credentials /root/cloudflare.ini
#      --dns-cloudflare-propagation-seconds 15
#      --email romanbalickij9@gmail.com
#      --agree-tos --no-eff-email
#      --force-renewal
#      -d thefans.com

networks:
  stack:
    name: stack



